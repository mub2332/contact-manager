{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","href","to","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","Axios","get","res","this","data","value","children","Component","Consumer","Contact","showContactInfo","onShowClick","prevState","onDeleteClick","a","async","delete","name","email","phone","onClick","style","cursor","float","color","marginRight","Contacts","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onFormSubmit","e","preventDefault","newContact","post","history","push","onInputChange","target","onSubmit","About","NotFound","EditContact","updatedContact","match","params","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.827a582a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"></i> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contacts/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"></i> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"></i> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n    case 'EDIT_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    const res = await Axios.get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({\n      contacts: res.data\n    });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Consumer } from '../../context';\nimport Axios from 'axios';\n\nexport class Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onShowClick = () => {\n    this.setState(prevState => ({\n      showContactInfo: !prevState.showContactInfo\n    }));\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    await Axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{' '}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer' }}\n                ></i>\n                <i\n                  onClick={() => this.onDeleteClick(id, dispatch)}\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                ></i>\n                <Link to={`contacts/edit/${id}`}>\n                  <i \n                    className=\"fas fa-pencil-alt\" \n                    style={{ \n                      cursor: 'pointer', \n                      float: 'right', \n                      color: 'black', \n                      marginRight: '1rem' }}>\n                  </i>\n                </Link>\n              </h4>\n              {showContactInfo && (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              )}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component, Fragment } from 'react';\nimport { Contact } from './Contact';\nimport { Consumer } from '../../context';\n\nexport class Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n\n          return (\n            <Fragment>\n              <h1 className=\"display-4 mb-3\">\n                <span className=\"text-danger\">Contacts</span>\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  name,\n  type,\n  label,\n  value,\n  placeholder,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        name={name}\n        type={type}\n        className={classnames('form-control from-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport Axios from 'axios';\n\nexport class AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onFormSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if (name === '') {\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          name: 'Name is required'\n        }\n      });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          phone: 'Phone is required'\n        }\n      });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          email: 'Email is required'\n        }\n      });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await Axios.post(\n      'https://jsonplaceholder.typicode.com/users/',\n      newContact\n    );\n\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: ''\n    });\n\n    this.props.history.push('/');\n  };\n\n  onInputChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={e => this.onFormSubmit(dispatch, e)}>\n                  <TextInputGroup\n                    name=\"name\"\n                    type=\"text\"\n                    label=\"Name\"\n                    placeholder=\"Enter name...\"\n                    value={name}\n                    onChange={this.onInputChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    name=\"email\"\n                    type=\"email\"\n                    label=\"Email\"\n                    placeholder=\"Enter email...\"\n                    value={email}\n                    onChange={this.onInputChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    name=\"phone\"\n                    type=\"text\"\n                    label=\"Phone\"\n                    placeholder=\"Enter phone...\"\n                    value={phone}\n                    onChange={this.onInputChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">v.alpha</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page doesn't exist</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport Axios from 'axios';\n\nexport class EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await Axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onFormSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if (name === '') {\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          name: 'Name is required'\n        }\n      });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          phone: 'Phone is required'\n        }\n      });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          email: 'Email is required'\n        }\n      });\n      return;\n    }\n\n    const updatedContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n    const res = await Axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updatedContact\n    );\n\n    dispatch({ type: 'EDIT_CONTACT', payload: res.data });\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: ''\n    });\n\n    this.props.history.push('/');\n  };\n\n  onInputChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={e => this.onFormSubmit(dispatch, e)}>\n                  <TextInputGroup\n                    name=\"name\"\n                    type=\"text\"\n                    label=\"Name\"\n                    placeholder=\"Enter name...\"\n                    value={name}\n                    onChange={this.onInputChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    name=\"email\"\n                    type=\"email\"\n                    label=\"Email\"\n                    placeholder=\"Enter email...\"\n                    value={email}\n                    onChange={this.onInputChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    name=\"phone\"\n                    type=\"text\"\n                    label=\"Phone\"\n                    placeholder=\"Enter phone...\"\n                    value={phone}\n                    onChange={this.onInputChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Edit Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/layout/Header';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Contacts from './components/contacts/Contacts';\n\nimport { Provider } from './context';\nimport AddContact from './components/contacts/AddContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport EditContact from './components/contacts/EditContact';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contacts/add\" component={AddContact} />\n                <Route\n                  exact\n                  path=\"/contacts/edit/:id\"\n                  component={EditContact}\n                />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}